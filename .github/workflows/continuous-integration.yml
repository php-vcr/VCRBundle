name: "Continuous Integration"

on:
    push:
        branches:
            - master
    pull_request: ~

jobs:
    phpunit:
        name: "PHPUnit"
        runs-on: "ubuntu-20.04"
        env:
            SYMFONY_REQUIRE: ${{matrix.symfony-require}}
            SYMFONY_DEPRECATIONS_HELPER: ${{matrix.symfony-deprecations-helper}}

        strategy:
            fail-fast: false
            matrix:
                php-version:
                    - "7.2"
                    - "7.3"
                    - "7.4"
                    - "8.0"
                    - "8.1"
                    - "8.2"
                dependencies:
                    - "highest"
                stability:
                    - "stable"
                symfony-require:
                    - "4.4.*"
                    - "5.4.*"
                symfony-deprecations-helper:
                    - "weak"
                include:
                    # Tests the lowest set of dependencies
                    -   dependencies: "lowest"
                        stability: "stable"
                        php-version: "7.2"
                        symfony-deprecations-helper: "weak"
        steps:
            -   name: "Checkout"
                uses: "actions/checkout@v2"
                with:
                    fetch-depth: 2

            -   name: "Install PHP"
                uses: "shivammathur/setup-php@v2"
                if: "${{ matrix.php-version != '7.1' }}"
                with:
                    php-version: "${{ matrix.php-version }}"
                    tools: composer,flex

            -   name: "Enforce using stable dependencies"
                run: "composer config minimum-stability stable"
                if: "${{ matrix.stability == 'stable' }}"

            -   name: "Install dependencies with Composer"
                uses: "ramsey/composer-install@v1"
                with:
                    dependency-versions: "${{ matrix.dependencies }}"
                    composer-options: "--prefer-dist"

            -   name: "Run PHPUnit"
                run: "vendor/bin/phpunit --log-junit phpunit.xml"

            -   name: "Publish Test Report"
                uses: "mikepenz/action-junit-report@v2"
                if: "always()" # always run even if the previous step fails
                with:
                    report_paths: "phpunit.xml"
